-- update
repeat wait() until game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui") 
repeat wait() until game.Players.LocalPlayer.PlayerGui:FindFirstChild("StartMenu")

local VirtualInputManager = game:GetService("VirtualInputManager")

-- Simulate a left click at (109, 1194)
VirtualInputManager:SendMouseButtonEvent(109, 1194, 0, true, game, 0)
VirtualInputManager:SendMouseButtonEvent(109, 1194, 0, false, game, 0)

task.wait(2)
game.workspace.MonsterSpawns.Triggers:Destroy()

local RunService = game:GetService("RunService")
local waypoints = {
    [1] = CFrame.new(-314.148254, 550.453735, -86.120636),
    [2] = CFrame.new(32.0048981, 482.455475, -820.521118),
    [3] = CFrame.new(417.6521, 249.303101, -970.287231),
    [4] = CFrame.new(553.268433, 178.716843, -1175.84766),
    [5] = CFrame.new(-314.148254, 550.453735, -86.120636),
}

local player = game.Players.LocalPlayer
local humanoidRootPart = player.Character:WaitForChild("HumanoidRootPart")
local currentWaypoint = 1
local loopPath = false
local speed = 120

local function setupCharacter()
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        local hrp = character:FindFirstChild("HumanoidRootPart")
        local rightLeg = character:FindFirstChild("Right Leg")

        if rightLeg then
            rightLeg.Name = "YYY Right Leg"
        end
        
        if humanoid and hrp then
            humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall, false)
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            task.wait(0.05)
            RunService.Heartbeat:Connect(function()
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                        humanoidRootPart.Velocity = Vector3.zero
                    end
                end
            end)
        end
    end
end

local function fireClickDetectors()
    local radius = 30
    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") and (part.Position - humanoidRootPart.Position).Magnitude <= radius then
            local clickDetector = part:FindFirstChildOfClass("ClickDetector")
            if clickDetector then
                fireclickdetector(clickDetector)
            end
        end
    end
end

local function moveToNextWaypoint()
    local targetCFrame = waypoints[currentWaypoint]
    local direction = (targetCFrame.Position - humanoidRootPart.Position).unit
    local distance = (targetCFrame.Position - humanoidRootPart.Position).Magnitude
    
    if distance < 1 then
        if humanoidRootPart.Position.Y < targetCFrame.Position.Y then
            humanoidRootPart.CFrame = CFrame.new(
                humanoidRootPart.Position.X,
                targetCFrame.Position.Y,
                humanoidRootPart.Position.Z
            )
        end

        if currentWaypoint == 4 then
            task.spawn(function()
                local stopTime = tick() + 5
                while tick() < stopTime do
                    fireClickDetectors()
                    humanoidRootPart.CFrame = CFrame.new(
                        humanoidRootPart.Position.X,
                        targetCFrame.Position.Y,
                        humanoidRootPart.Position.Z
                    )
                    task.wait(0.1)
                end
            end)
            task.wait(5)
        end

        currentWaypoint = currentWaypoint + 1
        if currentWaypoint > #waypoints then
            if loopPath then
                currentWaypoint = 1
            else
                local replicatedStorage = game:GetService("ReplicatedStorage")
                local serverInfo = replicatedStorage:WaitForChild("ServerInfo")

                local minPlayerCount = math.huge
                local jobWithMinPlayers = nil
                local currentServerJobId = game.JobId

                for _, serverFolder in pairs(serverInfo:GetChildren()) do
                    local playersValue = serverFolder:FindFirstChild("Players")
                    if playersValue then
                        local playerCount = #playersValue:GetChildren()
                        if playerCount < minPlayerCount and serverFolder.Name ~= currentServerJobId then
                            minPlayerCount = playerCount
                            jobWithMinPlayers = serverFolder.Name
                        end
                    end
                end

                if jobWithMinPlayers then
                    print("Server with least players is Job ID: " .. jobWithMinPlayers)
                    game:GetService("ReplicatedStorage").Requests.JoinPublicServer:FireServer(jobWithMinPlayers)
                else
                    print("No servers found with a 'Players' value.")
                end

                return
            end
        end
        return
    end

    local step = math.min(distance, speed * RunService.Heartbeat:Wait())
    humanoidRootPart.CFrame = humanoidRootPart.CFrame + direction * step
end

setupCharacter()

local socketUrl = "ws://localhost:8080"
local socket = WebSocket.connect(socketUrl)

if socket then
    print("Connected to WebSocket server!")

    socket.OnMessage:Connect(function(message)
        print("Message received from server: " .. message)
    end)

    socket.OnClose:Connect(function()
        print("WebSocket connection closed")
    end)

    local toolsInBackpack = {}

    local function monitorBackpack()
        local backpack = player.Backpack
        backpack.ChildAdded:Connect(function(child)
            if child:IsA("Tool") then
                if not toolsInBackpack[child.Name] then
                    toolsInBackpack[child.Name] = true
                    local message = "New tool added: " .. child.Name
                    socket:Send(message)
                    print("Sent to WebSocket: " .. message)
                else
                    print("Tool already in backpack: " .. child.Name)
                end
            end
        end)
    end

    monitorBackpack()
else
    print("Failed to connect to WebSocket server.")
end

while true do
    moveToNextWaypoint()
end
